openapi: 3.0.0
info:
  description: This is a simulator for secure IoT middleware.
  version: 1.0.1
  title: IoT Secure Middleware Simulator
  contact:
    email: pascal.gremaud@unifr.ch
servers:
  - description: Live server instance 
    url: http://iot-simulator.polchky.io
  - description: Localhost server
    url: http://localhost:3000
tags:
  - name: actions
  - name: action templates
  - name: action types
  - name: clients
  - name: events
  - name: event types
  - name: rules
  - name: scenarios
paths:
  /actions/:
    delete:
      tags:
        - actions
      responses:
        '204':
          description: No content
  /clients/{clientId}/actions/:
    get:
      tags:
        - actions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Action'
        '404':
          description: Not found
      parameters:
        - name: clientId
          in: path
          description: ID of client to which the actions belong
          required: true
          schema:
            type: integer
  /clients/{clientId}/actions/{actionId}:
    get:
      tags:
        - actions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
        '404':
          description: Not found
      parameters:
        - name: clientId
          in: path
          description: ID of client to which the actions belong
          required: true
          schema:
            type: integer 
        - name: actionId
          in: path
          description: ID of action to retrieve
          required: true
          schema:
            type: integer 
        
  /actiontemplates/:
    get:
      tags: 
        - action templates
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionTemplate'
    post: 
      tags: 
        - action templates
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTemplate'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/ActionTemplate'
    delete:
      tags: 
        - action templates
      responses: 
        '204':
          description: No content
        '409':
          description: Conflict with related resource
  /actiontemplates/{actionTemplateId}:
    get:
      tags: 
        - action templates
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTemplate'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: actionTemplateId
          in: path
          description: ID of action template to return
          required: true
          schema:
            type: integer
    put:
      tags: 
        - action templates
      parameters:
        - name: actionTemplateId
          in: path
          description: ID of action template to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ActionTemplate'
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTemplate'
        '400':
          description: Invalid input
        '404':
          description: Not found
        '409':
          description: Conflict with related resource
    delete:
      tags: 
        - action templates
      parameters:
        - name: actionTemplateId
          in: path
          description: ID of action template to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
        '409':
          description: Conflict with related resource
  /actiontypes/:
    get:
      tags: 
        - action types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''#/components/schemas/ActionType''
    post: 
      tags: 
        - action types
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionType'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/ActionType'
    delete:
      tags: 
        - action types
      responses: 
        '204':
          description: No content
  /actiontypes/{actionTypeId}:
    get:
      tags: 
        - action types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionType'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: actionTypeId
          in: path
          description: ID of action type to return
          required: true
          schema:
            type: integer
    put:
      tags: 
        - action types
      parameters:
        - name: actionTypeId
          in: path
          description: ID of action type to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ActionType'
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionType'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      tags: 
        - action types
      parameters:
        - name: actionTypeId
          in: path
          description: ID of action type to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
  /clients/:
    get:
      tags: 
        - clients
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post: 
      tags: 
        - clients
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Client'
    delete:
      tags: 
        - clients
      responses: 
        '204':
          description: No content
  /clients/{clientId}:
    get:
      tags: 
        - clients
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: clientId
          in: path
          description: ID of client to return
          required: true
          schema:
            type: integer
    put:
      tags: 
        - clients
      parameters:
        - name: clientId
          in: path
          description: ID of client to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Client'
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      tags: 
        - clients
      parameters:
        - name: clientId
          in: path
          description: ID of client to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
  /events/:
    get:
      tags: 
        - events
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post: 
      tags: 
        - events
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Event'
    delete:
      tags: 
        - events
      responses: 
        '204':
          description: No content
        '409':
          description: Conflict with related resource
  /events/{eventId}:
    get:
      tags: 
        - events
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: eventId
          in: path
          description: ID of event to return
          required: true
          schema:
            type: integer
    delete:
      tags: 
        - events
      parameters:
        - name: eventId
          in: path
          description: ID of event to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
        '409':
          description: Conflict with related resource
  /eventtypes/:
    get:
      tags: 
        - event types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
    post: 
      tags: 
        - event types
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/EventType'
    delete:
      tags: 
        - event types
      responses: 
        '204':
          description: No content
        '409':
          description: Conflict with related resource
  /eventtypes/{eventTypeId}:
    get:
      tags: 
        - event types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: eventTypeId
          in: path
          description: ID of event type to return
          required: true
          schema:
            type: integer
    put:
      tags: 
        - event types
      parameters:
        - name: eventTypeId
          in: path
          description: ID of event type to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/EventType'
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      tags: 
        - event types
      parameters:
        - name: eventTypeId
          in: path
          description: ID of event type to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
        '409':
          description: Conflict with related resource
  /rules/:
    get:
      tags: 
        - rules
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
    post: 
      tags: 
        - rules
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Rule'
    delete:
      tags: 
        - rules
      responses: 
        '204':
          description: No content
  /rules/{ruleId}:
    get:
      tags: 
        - rules
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: ruleId
          in: path
          description: ID of rule to return
          required: true
          schema:
            type: integer
    put:
      tags: 
        - rules
      parameters:
        - name: ruleId
          in: path
          description: ID of rule to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Rule'
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      tags: 
        - rules
      parameters:
        - name: ruleId
          in: path
          description: ID of rule to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
  /scenarios/:
    get:
      tags: 
        - scenarios
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scenario'
    post: 
      tags: 
        - scenarios
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Scenario'
    delete:
      tags: 
        - scenarios
      responses: 
        '204':
          description: No content
  /scenarios/{scenarioId}:
    get:
      tags: 
        - scenarios
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
      parameters:
        - name: scenarioId
          in: path
          description: ID of scenario to return
          required: true
          schema:
            type: integer
    put:
      tags: 
        - scenarios
      parameters:
        - name: scenarioId
          in: path
          description: ID of scenario to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Scenario'
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      tags: 
        - scenarios
      parameters:
        - name: scenarioId
          in: path
          description: ID of scenario to delete
          required: true
          schema:
            type: integer
      responses: 
        '204':
          description: No content
        '400':
          description: Invalid parameter
        '404': 
          description: Not found
components:
  schemas:
    Action: 
      type: object
      properties:
        id:
          type: integer
        message: 
          type: string
        timestamp: 
          type: string
        eventId: 
          type: integer
        ruleId: 
          type: integer
        actionTemplateId:
          type: integer
    ActionTemplate:
      type: object
      properties:
        name: 
          type: string
        ruleId:
          type: integer
        actionTypeId: 
          type: integer
        clients:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
        function:
          type: string
        context:
          type: object
    ActionType:
      type: object
      properties:
        id:
          type: integer
        name: 
          type: string
        schema:
          type: object
    Client: 
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string
        isAdmin: 
          type: boolean
        isActive:
          type: boolean
    Event:
      type: object
      properties:
        id: 
          type: integer
        clientId: 
          type: integer
        eventTypeId:
          type: integer
        properties:
          type: object
        timestamp:
          type: string
    EventType:
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string
        schema:
          type: object
    Rule:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        eventTypeId:
          type: integer
        function:
          type: string
        isActive:
          type: boolean
        context:
          type: object
    Scenario:
      type: object
      properties:
        id:
          type: integer
        document:
          type: object
  requestBodies:
    ActionTemplate:
      content:
        application/json:
          schema:
            type: object
            properties:
              name: 
                type: string
              ruleId:
                type: integer
              actionTypeId: 
                type: integer
              clients:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
              function:
                type: string
              context:
                type: object
      required: true
    ActionType:
      content:
        application/json:
          schema:
            type: object
            properties:
              name: 
                type: string
              schema:
                type: object
      required: true
    Client:
      content:
        application/json:
          schema:
            type: object
            properties:
              name: 
                type: string
              isAdmin:
                type: boolean
              isActive:
                type: boolean
      required: true
    Event:
      content:
        application/json:
          schema:
            type: object
            properties:
              clientId: 
                type: integer
              eventTypeId:
                type: integer
              properties:
                type: object
              timestamp:
                type: string
      required: true
    EventType:
      content:
        application/json:
          schema:
            type: object
            properties:
              name: 
                type: string
              schema:
                type: object
      required: true
    Rule:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              eventTypeId:
                type: integer
              function:
                type: string
              isActive:
                type: boolean
              context:
                type: object
    Scenario:
      content:
        application/json:
          schema:
            type: object
            properties:
              document:
                type: object
